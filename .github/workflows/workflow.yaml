name: Main workflow

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - github-actions
  workflow_dispatch:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.13
          cache: 'pipenv'
      - name: Install libraries
        run: |
            python -m pip install --upgrade pip
            pip install pipenv
            pipenv install

      - name: pytest-check
        run: pipenv run pytest
      - name: pylint-check
        run: pipenv run pylint $(git ls-files 'src/*.py') --rcfile .pylintrc --fail-under 5



  build-and-run-task1:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.13
          cache: 'pipenv'
      - name: Install libraries
        run: |
            python -m pip install --upgrade pip
            pip install pipenv
            pipenv install
      - name: Copy .env file
        run: |
            cd src/task1
            cp .env_template .env
      - name: Load .env file
        id: dotenv
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: src/task1/.env
      - name: docker build Task1-app
        run: |
            cd src/task1/
            docker build -t task1 .

      - name: docker run task1
        run: docker run -d -p ${{ env.FASTAPI_PORT }}:${{ env.FASTAPI_PORT }} task1

      - name: curl Task1-app
        run:  |
              sleep 5
              curl -v http://localhost:${{ env.FASTAPI_PORT }}
